package Sudoku;

public enum SudokuRepository {
    FOUR_BY_FOUR(new Sudoku[]{
            new Sudoku(new int[][] {
                    {1, 2, 3, 4},
                    {3, 4, 1, 2},
                    {2, 1, 4, 3},
                    {4, 3, 2, 1}
            }),
            new Sudoku(new int[][] {
                    {4, 3, 1, 2},
                    {2, 1, 4, 3},
                    {1, 4, 3, 2},
                    {3, 2, 1, 4}
            }),
            new Sudoku(new int[][] {
                    {2, 1, 4, 3},
                    {4, 3, 2, 1},
                    {3, 2, 1, 4},
                    {1, 4, 3, 2}
            }),
            new Sudoku(new int[][] {
                    {3, 4, 2, 1},
                    {1, 2, 3, 4},
                    {4, 1, 2, 3},
                    {2, 3, 4, 1}
            })
    }),

    NINE_BY_NINE(new Sudoku[]{
            new Sudoku(new int[][] {
                    {5, 3, 4, 6, 7, 8, 9, 1, 2},
                    {6, 7, 2, 1, 9, 5, 3, 4, 8},
                    {1, 9, 8, 3, 4, 2, 5, 6, 7},
                    {8, 5, 9, 7, 6, 1, 4, 2, 3},
                    {4, 2, 6, 8, 5, 3, 7, 9, 1},
                    {7, 1, 3, 9, 2, 4, 8, 5, 6},
                    {9, 6, 1, 5, 3, 7, 2, 8, 4},
                    {2, 8, 7, 4, 1, 9, 6, 3, 5},
                    {3, 4, 5, 2, 8, 6, 1, 7, 9}
            }),
            new Sudoku(new int[][] {
                    {8, 2, 7, 1, 5, 4, 3, 9, 6},
                    {9, 6, 5, 3, 2, 7, 1, 4, 8},
                    {3, 4, 1, 6, 8, 9, 7, 5, 2},
                    {5, 9, 3, 4, 6, 8, 2, 7, 1},
                    {4, 7, 2, 5, 1, 3, 6, 8, 9},
                    {6, 1, 8, 9, 7, 2, 4, 3, 5},
                    {7, 8, 6, 2, 3, 5, 9, 1, 4},
                    {1, 5, 4, 7, 9, 6, 8, 2, 3},
                    {2, 3, 9, 8, 4, 1, 5, 6, 7}
            }),
            new Sudoku(new int[][] {
                    {1, 4, 7, 3, 6, 9, 8, 2, 5},
                    {6, 3, 2, 8, 5, 7, 4, 9, 1},
                    {9, 5, 8, 2, 4, 1, 3, 6, 7},
                    {3, 7, 6, 9, 8, 5, 2, 1, 4},
                    {4, 9, 5, 1, 2, 3, 7, 8, 6},
                    {8, 2, 1, 7, 9, 6, 5, 3, 4},
                    {2, 6, 3, 5, 1, 8, 9, 4, 7},
                    {7, 8, 4, 6, 3, 2, 1, 5, 9},
                    {5, 1, 9, 4, 7, 8, 6, 3, 2}
            }),
            new Sudoku(new int[][] {
                    {2, 6, 4, 1, 3, 8, 9, 7, 5},
                    {8, 1, 3, 9, 7, 5, 4, 2, 6},
                    {7, 9, 5, 6, 2, 4, 3, 8, 1},
                    {5, 8, 9, 3, 1, 6, 7, 4, 2},
                    {4, 2, 6, 7, 9, 8, 1, 5, 3},
                    {3, 7, 1, 5, 4, 2, 8, 6, 9},
                    {6, 3, 7, 8, 5, 9, 2, 1, 4},
                    {9, 4, 8, 2, 6, 1, 5, 3, 7},
                    {1, 5, 2, 4, 8, 7, 6, 9, 3}
            })
    }),

    SIXTEEN_BY_SIXTEEN(new Sudoku[]{
            new Sudoku(new int[][] {
                    {  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16 },
                    {  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,  1,  2,  3,  4 },
                    {  9, 10, 11, 12, 13, 14, 15, 16,  1,  2,  3,  4,  5,  6,  7,  8 },
                    { 13, 14, 15, 16,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12 },
                    {  2,  1,  4,  3,  6,  5,  8,  7, 10,  9, 12, 11, 14, 13, 16, 15 },
                    {  6,  5,  8,  7, 10,  9, 12, 11, 14, 13, 16, 15,  2,  1,  4,  3 },
                    { 10,  9, 12, 11, 14, 13, 16, 15,  2,  1,  4,  3,  6,  5,  8,  7 },
                    { 14, 13, 16, 15,  2,  1,  4,  3,  6,  5,  8,  7, 10,  9, 12, 11 },
                    {  3,  4,  1,  2,  7,  8,  5,  6, 11, 12,  9, 10, 15, 16, 13, 14 },
                    {  7,  8,  5,  6, 11, 12,  9, 10, 15, 16, 13, 14,  3,  4,  1,  2 },
                    { 11, 12,  9, 10, 15, 16, 13, 14,  3,  4,  1,  2,  7,  8,  5,  6 },
                    { 15, 16, 13, 14,  3,  4,  1,  2,  7,  8,  5,  6, 11, 12,  9, 10 },
                    {  4,  3,  2,  1,  8,  7,  6,  5, 12, 11, 10,  9, 16, 15, 14, 13 },
                    {  8,  7,  6,  5, 12, 11, 10,  9, 16, 15, 14, 13,  4,  3,  2,  1 },
                    { 12, 11, 10,  9, 16, 15, 14, 13,  4,  3,  2,  1,  8,  7,  6,  5 },
                    { 16, 15, 14, 13,  4,  3,  2,  1,  8,  7,  6,  5, 12, 11, 10,  9 }
            }),

            new Sudoku(new int[][] {
                    {  3,  1,  4,  2,  7,  5,  8,  6, 11,  9, 12, 10, 15, 13, 16, 14 },
                    {  7,  5,  8,  6, 11,  9, 12, 10, 15, 13, 16, 14,  3,  1,  4,  2 },
                    { 11,  9, 12, 10, 15, 13, 16, 14,  3,  1,  4,  2,  7,  5,  8,  6 },
                    { 15, 13, 16, 14,  3,  1,  4,  2,  7,  5,  8,  6, 11,  9, 12, 10 },
                    {  2,  4,  1,  3,  6,  8,  5,  7, 10, 12,  9, 11, 14, 16, 13, 15 },
                    {  6,  8,  5,  7, 10, 12,  9, 11, 14, 16, 13, 15,  2,  4,  1,  3 },
                    { 10, 12,  9, 11, 14, 16, 13, 15,  2,  4,  1,  3,  6,  8,  5,  7 },
                    { 14, 16, 13, 15,  2,  4,  1,  3,  6,  8,  5,  7, 10, 12,  9, 11 },
                    {  1,  3,  2,  4,  5,  7,  6,  8,  9, 11, 10, 12, 13, 15, 14, 16 },
                    {  5,  7,  6,  8,  9, 11, 10, 12, 13, 15, 14, 16,  1,  3,  2,  4 },
                    {  9, 11, 10, 12, 13, 15, 14, 16,  1,  3,  2,  4,  5,  7,  6,  8 },
                    { 13, 15, 14, 16,  1,  3,  2,  4,  5,  7,  6,  8,  9, 11, 10, 12 },
                    {  4,  2,  3,  1,  8,  6,  7,  5, 12, 10, 11,  9, 16, 14, 15, 13 },
                    {  8,  6,  7,  5, 12, 10, 11,  9, 16, 14, 15, 13,  4,  2,  3,  1 },
                    { 12, 10, 11,  9, 16, 14, 15, 13,  4,  2,  3,  1,  8,  6,  7,  5 },
                    { 16, 14, 15, 13,  4,  2,  3,  1,  8,  6,  7,  5, 12, 10, 11,  9 }
            }),
            new Sudoku(new int[][] {
                    {  1,  5,  9, 13,  2,  6, 10, 14,  3,  7, 11, 15,  4,  8, 12, 16 },
                    {  2,  6, 10, 14,  3,  7, 11, 15,  4,  8, 12, 16,  1,  5,  9, 13 },
                    {  3,  7, 11, 15,  4,  8, 12, 16,  1,  5,  9, 13,  2,  6, 10, 14 },
                    {  4,  8, 12, 16,  1,  5,  9, 13,  2,  6, 10, 14,  3,  7, 11, 15 },
                    {  5,  9, 13,  1,  6, 10, 14,  2,  7, 11, 15,  3,  8, 12, 16,  4 },
                    {  6, 10, 14,  2,  7, 11, 15,  3,  8, 12, 16,  4,  5,  9, 13,  1 },
                    {  7, 11, 15,  3,  8, 12, 16,  4,  5,  9, 13,  1,  6, 10, 14,  2 },
                    {  8, 12, 16,  4,  5,  9, 13,  1,  6, 10, 14,  2,  7, 11, 15,  3 },
                    {  9, 13,  1,  5, 10, 14,  2,  6, 11, 15,  3,  7, 12, 16,  4,  8 },
                    { 10, 14,  2,  6, 11, 15,  3,  7, 12, 16,  4,  8,  9, 13,  1,  5 },
                    { 11, 15,  3,  7, 12, 16,  4,  8,  9, 13,  1,  5, 10, 14,  2,  6 },
                    { 12, 16,  4,  8,  9, 13,  1,  5, 10, 14,  2,  6, 11, 15,  3,  7 },
                    { 13,  1,  5,  9, 14,  2,  6, 10, 15,  3,  7, 11, 16,  4,  8, 12 },
                    { 14,  2,  6, 10, 15,  3,  7, 11, 16,  4,  8, 12, 13,  1,  5,  9 },
                    { 15,  3,  7, 11, 16,  4,  8, 12, 13,  1,  5,  9, 14,  2,  6, 10 },
                    { 16,  4,  8, 12, 13,  1,  5,  9, 14,  2,  6, 10, 15,  3,  7, 11 }
            }),
            new Sudoku(new int[][] {
                    {  1,  3,  2,  4,  9, 11, 10, 12,  5,  7,  6,  8, 13, 15, 14, 16 },
                    {  5,  7,  6,  8, 13, 15, 14, 16,  1,  3,  2,  4,  9, 11, 10, 12 },
                    {  9, 11, 10, 12,  1,  3,  2,  4, 13, 15, 14, 16,  5,  7,  6,  8 },
                    { 13, 15, 14, 16,  5,  7,  6,  8,  9, 11, 10, 12,  1,  3,  2,  4 },
                    {  2,  4,  1,  3, 10, 12,  9, 11,  6,  8,  5,  7, 14, 16, 13, 15 },
                    {  6,  8,  5,  7, 14, 16, 13, 15,  2,  4,  1,  3, 10, 12,  9, 11 },
                    { 10, 12,  9, 11,  2,  4,  1,  3, 14, 16, 13, 15,  6,  8,  5,  7 },
                    { 14, 16, 13, 15,  6,  8,  5,  7, 10, 12,  9, 11,  2,  4,  1,  3 },
                    {  3,  1,  4,  2, 11,  9, 12, 10,  7,  5,  8,  6, 15, 13, 16, 14 },
                    {  7,  5,  8,  6, 15, 13, 16, 14,  3,  1,  4,  2, 11,  9, 12, 10 },
                    { 11,  9, 12, 10,  3,  1,  4,  2, 15, 13, 16, 14,  7,  5,  8,  6 },
                    { 15, 13, 16, 14,  7,  5,  8,  6, 11,  9, 12, 10,  3,  1,  4,  2 },
                    {  4,  2,  3,  1, 12, 10, 11,  9,  8,  6,  7,  5, 16, 14, 15, 13 },
                    {  8,  6,  7,  5, 16, 14, 15, 13,  4,  2,  3,  1, 12, 10, 11,  9 },
                    { 12, 10, 11,  9,  4,  2,  3,  1, 16, 14, 15, 13,  8,  6,  7,  5 },
                    { 16, 14, 15, 13,  8,  6,  7,  5, 12, 10, 11,  9,  4,  2,  3,  1 }
            })
    });

    private final Sudoku[] puzzles;

    SudokuRepository(Sudoku[] puzzles) {
        this.puzzles = puzzles;
    }

    public Sudoku[] getPuzzles() {
        return puzzles;
    }

    public static Sudoku[] getPuzzlesBySize(SudokuSize size) {
        return switch (size) {
            case SMALL -> FOUR_BY_FOUR.getPuzzles();
            case MEDIUM -> NINE_BY_NINE.getPuzzles();
            case LARGE -> SIXTEEN_BY_SIXTEEN.getPuzzles();
            default -> throw new IllegalArgumentException("Unknown Sudoku.Sudoku size: " + size);
        };
    }
}
